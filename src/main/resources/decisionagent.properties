# decisionagent.properties (version 2.5.1.71 2016-05-26)

###############################
#                             #
#  Decision Agent properties  #
#                             #
###############################

# Whether to check for data source existence at execution time
datasources.validate = false

# To override the default code page for data type 'CA'
#ascii.codepage = ASCII  

# To override the default transaction segment name
#transactionsegment.name = TRANSEG

# To override the default code page for data type 'CE'
#ebcdic.codepage = cp285

# To set the dynamic code page for text data types
#dynamic.codepage = 

# The maximum time allowed (in seconds) to execute a non-Java external call program
#externalcall.timeout = 5

# The maximum number of strategy chaining jumps allowed (default is 10, maximum is 100)
#chaining.limit = 10

# Whether to enable profiling at the beginning of execution
#profiler.enabled = false

# Specifies the default directory for profiler reports
#profiler.directory = 

# To use caching or not - default is false
caching.enabled = false

# Maximum number of cache objects to hold per strategy - default is 5
caching.hold = 5

# Deployment statuses that are eligible for execution
allowed.deployment.status.list = pending,sanctioned,rejected

# To set the output location for the AuditLog.txt file
auditlog.filename = ./AuditLog.txt

# To set filename for system information dump
# Optional; Default = da-dump-${timestamp}
#da.dump.filename = da-dump-${timestamp}

# To set system information dump format
# Optional; Default = xml; Options = xml, text
#da.dump.format=xml

# Enable inflight data and execution state monitoring
# Optional; Default = false
#da.dump.inflight.enabled=false

# Dumps system information when error occurs during DA call.
# Optional; Default = true
da.dump.onError=false

# ==============================================================================
# strategy.loader.class
# ==============================================================================
# Strategy loaders determine how strategy files are loaded (i.e. from classpath,
# specific directories, etc).
#
# Available loaders:
# com.experian.eda.component.decisionagent.strategyloader.DefaultStrategyLoader
#com.experian.eda.component.decisionagent.strategyloader.DirectoryBasedStrategyLoader
#
# Default:
# strategy.loader.class = com.experian.eda.component.decisionagent.strategyloader.DefaultStrategyLoader
#
# Each loader may contain specific configurations, as described below.
#
# ---------------------
# DefaultStrategyLoader
# ---------------------
# This default loader loads strategies from classpath. No configuration needed.
#
# Example (uncomment the following line to use it):
#
# strategy.loader.class = com.experian.eda.component.decisionagent.strategyloader.DefaultStrategyLoader
#
# ----------------------------
# DirectoryBasedStrategyLoader
# ----------------------------
# DirectoryBasedStrategyLoader finds strategy files from user specified
# directories. It will locate the strategy from all paths provided, until the
# strategy is found.
#
# Example, to configure DirectoryBasedStrategyLoader to locate strategy files
# from three separate directories (uncomment lines below this section to use it):
#
strategy.loader.class = com.experian.eda.ace.hadoop.HadoopStratergyLoader
#DirectoryBasedStrategyLoader.path1 = C:/SparkProjects

# DirectoryBasedStrategyLoader.path2 = c:/path2
# DirectoryBasedStrategyLoader.path3 = dir3
#
# ----------------------------
# MergingStrategyLoader
# ----------------------------
# MergingStrategyLoader finds logical and physical strategy files from user specified
# directories. It will locate the strategy from all paths provided, until the
# strategy is found.
#
# Example, to configure MergingStrategyLoader to locate strategy files
# from three separate directories (uncomment lines below this section to use it):
# ***Empty spaces & empty strings will be ignored.  If the paths are not specified, the base directory [.] will be used
#
# strategy.loader.class = com.experian.eda.component.decisionagent.strategyloader.MergingStrategyLoader
# MergingStrategyLoader.paths.logical = dir1, C:/path2, dir3
# MergingStrategyLoader.paths.physical = dir1, C:/path2, ., dir4,



###############################
#                             #
#    Monitoring properties    #
#                             #
###############################

##############################################################
# List of symbolic names for all analytical data handlers
##############################################################
# Listed here are the symbolic names of the analytical
#   data handlers for handling the analytical data blob.
#
#   If monitoring.handlers is empty or unavailable or
#   commented out, there will be no handlers loaded for
#   the decision agent.
#
#   If there's a handler configured programmatically, the
#   handler(s) configured here will be executed along with
#   the former.
#
#   If a handler is not correctly configured, it will not
#   be a show stopper.  Other handlers will continue to be
#   loaded (if they're configured correctly)
#   E.g. BatchFile, ZFile, BatchJdbc
monitoring.handlers = 

#############################################################
# Configuration for VSAM ZFile analytical data handler
#############################################################
# VSAM ZFile analytical data handler is a handler that writes
#   the analytical data blob to a z/OS file. The following
#   configuration allows user to decide the filename of
#   the file to be written to, code page and file options.

# Binary class name of the handler.
monitoring.handler.ZFile = com.experian.eda.framework.runtime.decisionagent.monitoring.handler.ZFileAnalyticalDataHandler

# Codepage to use to write the transaction id.
#   Default: Cp1252
#   Options: ASCII (WINDOWS) - Cp1252; IBM EBCDIC (GB encoding) - Cp285
#monitoring.handler.ZFile.codepage = Cp1252

# Filename for the analytical data blob file.
#   Default: //DD:BLOB
#   Warning: file needs to exist prior to execution
#monitoring.handler.ZFile.filename = //DD:BLOB

# Options of the analytical data blob file.
#   Default: ab+,type=record,noseek
#   Warning: file needs to exist prior to execution
#monitoring.handler.ZFile.options = ab+,type=record,noseek

#############################################################
# Configuration for Batch File analytical data handler
#############################################################
# Batch file analytical handler writes multiple analytical data blobs
# to a single file in batches.
#
# Handler class name - Required.
# monitoring.handler.BatchFile=com.experian.eda.framework.runtime.decisionagent.monitoring.handler.BatchFileAnalyticalDataHandler
#
# shutdownHook - Optional. [True|False]. When turned on, this handler will
# prevent the JVM from shutting down prematurely. It will ensure that all
# analytical data captured from DA calls are processed before shutting down the
# JVM.
# monitoring.handler.BatchFile.shutdownHook=true
#
# filename - Optional. Analytical blob filename.
# monitoring.handler.BatchFile.filename=analytical-data.blob

#############################################################
# Configuration for Batch JDBC analytical data handler
#############################################################
# Batch JDBC analytical handler writes analytical data blob
# to relational database.
#
# Handler class name - Required.
# monitoring.handler.BatchJdbc=com.experian.eda.framework.runtime.decisionagent.monitoring.handler.BatchJdbcAnalyticalDataHandler
#
# shutdownHook - Optional. [True|False]. When turned on, this handler will
# prevent the JVM from shutting down prematurely. It will ensure that all
# analytical data captured from DA calls are processed before shutting down the
# JVM.
# monitoring.handler.BatchJdbc.shutdownHook=true
#
# batchExecuteSize - Optional. Number of analytical blobs to write per batch
# JDBC execution.
# monitoring.handler.BatchJdbc.batchExecuteSize=100
#
# driver - Required. JDBC driver class name. Examples:
# org.apache.derby.jdbc.ClientDriver, com.mysql.jdbc.Driver.
# monitoring.handler.BatchJdbc.driver=
#
# url - Required. URL to connect to the database.
# Examples:
#   jdbc:derby://localhost:1527/analyticaldata
#   jdbc:mysql://localhost:3306/analyticaldata
# monitoring.handler.BatchJdbc.url=
#
# username - Required. Username to connect to the database.
# monitoring.handler.BatchJdbc.username=
#
# password - Required. Password to connect to the database.
# monitoring.handler.BatchJdbc.password=
#
# tableName - Optional. Table name for transactional blob.
# monitoring.handler.BatchJdbc.tableName=TransactionalData
#
################################################################
# MBean configuration
################################################################
#
# Enable/disable JMX Agent registration
# Options: true, false
# jmxagent.enabled = false
#
#

#######################
#                     #
#  Script properties  #
#                     #
#######################

# Setting to enable/disable throwing of exception when script local looping LIMIT is reached.
# Default is false. Omit this property for backward compatibility.
script.exception.on.loop.limit = false

################################################################
# External Script (JSR-223)
################################################################

# External script loader class name override
# default: script.loader.class=com.experian.eda.component.externalscript.loader.DefaultScriptLoader
# options: 
#      - com.experian.eda.component.externalscript.loader.DefaultScriptLoader
#      - com.experian.eda.component.externalscript.loader.PathScriptLoader
#externalscript.loader.class=com.experian.eda.component.externalscript.loader.DefaultScriptLoader

# Path pointing to external script location, only applicable for PathScriptLoader
#externalscript.path=C:/myscript

# Toggle external script cache
# default: externalscript.cache=off
#externalscript.cache=off